#!/bin/bash

#-- Setup
#
#    Download Bitcoin core binaries from Bitcoin Core Org https://bitcoincore.org/.
#
#    Using a Raspberry Pi, so had to select different architecture
wget -nc https://bitcoincore.org/bin/bitcoin-core-25.0/bitcoin-25.0-aarch64-linux-gnu.tar.gz

wget -nc https://bitcoincore.org/bin/bitcoin-core-25.0/SHA256SUMS
wget -nc https://bitcoincore.org/bin/bitcoin-core-25.0/SHA256SUMS.asc

if sha256sum --ignore-missing --check SHA256SUMS; then
  echo "*******************************************************************************************************"
  echo "*******************************************Checksum Verified*******************************************"
  echo "*******************************************************************************************************"
else
  echo "***********************************************************************************************************"
  echo "*******************************************Checksum Not Verified*******************************************"
  echo "***********************************************************************************************************"
fi

git clone https://github.com/bitcoin-core/guix.sigs
gpg --import guix.sigs/builder-keys/*

#    Use the downloaded hashes and signature to verify that binary is right. Print a message to terminal "Binary signature verification successful".
if gpg --verify SHA256SUMS.asc; then
  echo "******************************************************************************************************************************"
  echo "*******************************************Binary signature verification successful*******************************************"
  echo "******************************************************************************************************************************"
else
  echo "*************************************************************************************************************"
  echo "*******************************************Binary signature FAILED*******************************************"
  echo "*************************************************************************************************************"
fi



#    Copy the downloaded binaries to /usr/local/bin/ for folder.
tar xvzf bitcoin-25.0-aarch64-linux-gnu.tar.gz
sudo cp bitcoin-25.0/bin/* /usr/local/bin





#
#-- Initiate
#
#    Create a bitcoin.conf file in the /home/<user-name>/.bitcoin/ data directory. Create the directory if it doesn't exist. 
mkdir -p ~/.bitcoin
touch ~/.bitcoin/bitcoin.conf

# And add the following lines to the file.
#
#  regtest=1
#  fallbackfee=0.0001
#  server=1
#  txindex=1
#
echo "regtest=1">> ~/.bitcoin/bitcoin.conf
echo "fallbackfee=0.0001">> ~/.bitcoin/bitcoin.conf
echo "server=1">> ~/.bitcoin/bitcoin.conf
echo "txindex=1">> ~/.bitcoin/bitcoin.conf

#    start bitcoind.
bitcoind -daemon

#    create two wallet named Miner and Trader.
#bitcoin-cli -named createwallet wallet_name="Trader" descriptors=false
#bitcoin-cli -named createwallet wallet_name="Miner" descriptors=false

#    Generate one address from the Miner wallet with a label "Mining Reward".
MINERADDRESS=$(bitcoin-cli -rpcwallet=Miner getnewaddress "Miner Reward" legacy)

#    Mine new blocks to this address until you get positive wallet balance. (use generatetoaddress) (how many blocks it took to get to positive balance)
bitcoin-cli generatetoaddress 101 $MINERADDRESS

#    Write a short comment describing why wallet balance for block rewards behaves that way.
echo "# BTCs generated by coinbase transaction cannot be spent until after 100 more blocks have been mined"
echo "# (Security measure to avoid double spend in case a reorg happens)"

#    Print the balance of the Miner wallet.
echo "The current balance of the Miner's wallet is: "
bitcoin-cli -rpcwallet=Miner getbalance

#-- Usage

#    Create a receiving addressed labeled "Received" from Trader wallet.
TRADERADDRESS=$(bitcoin-cli -rpcwallet=Trader getnewaddress "Received" legacy)

#    Send a transaction paying 20 BTC from Miner wallet to Trader's wallet.
TXID=$(bitcoin-cli -rpcwallet=Miner sendtoaddress $TRADERADDRESS 20)

#    Fetch the unconfirmed transaction from the node's mempool and print the result. (hint: bitcoin-cli help to find list of all commands, look for getmempoolentry).
bitcoin-cli getmempoolentry $TXID

#    Confirm the transaction by creating 1 more block.
bitcoin-cli generatetoaddress 1 $MINERADDRESS






### Ok, this is as far as I got... I have all the required information in the variables below, but couldn't print them out as required, sorry!

COMPLETETX=$(bitcoin-cli -rpcwallet=Miner gettransaction $TXID)

BLOCKHASH=$(echo $COMPLETETX |jq '.blockhash')

TXID=$(echo $COMPLETETX |jq '.txid')

RAWTX=$(bitcoin-cli getrawtransaction $TXID $BLOCKHASH true)
